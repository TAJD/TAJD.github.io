I"ù<h1 id="summary">Summary</h1>

<p>This is a page of resources which Iâ€™ve found useful in rounding out my computer science knowledge. I had an awakening with one of the first interviews I had when I was looking for work in industry - I was asked a series of questions which I simply didnâ€™t have a clue on, despite having written some tricky code. Well, that was then. The key learning points for me are:</p>

<ol>
  <li>Coding interviews are about solving specific problems which aim to demonstrate knowledge of solving classic computer science problems.</li>
  <li>Coding interviews are necessary to filter out candidates who arenâ€™t prepared to put the work in.</li>
  <li>Preparing for coding interviews actually makes me a better programmer.</li>
</ol>

<h1 id="useful-books">Useful books</h1>

<ul>
  <li><a href="http://www.algorist.com/">The Algorithm Design Manual</a> is probably one of the most recommended books for the fundamentals on algorithm design and data structures. Iâ€™ve found it really useful.</li>
  <li><a href="http://www.crackingthecodinginterview.com/">Cracking the coding interview</a> I should have bought this book as soon as I started looking for jobs in technology.</li>
</ul>

<h1 id="useful-websites-for-practicing-coding-problems">Useful websites for practicing coding problems</h1>

<ul>
  <li>https://www.hackerrank.com/</li>
  <li>https://app.codility.com/programmers/ Iâ€™ve come across this in quant interviews. The lessons are not bad.</li>
  <li>https://www.codewars.com/</li>
</ul>
:ET